package util;

import model.PhieuDoiTra;
import java.time.LocalDateTime;
import java.math.BigDecimal;
import java.util.logging.Logger;

/**
 * Test utility for Vietnamese font support in PDF generation
 */
public class VietnameseFontTest {
    
    private static final Logger logger = Logger.getLogger(VietnameseFontTest.class.getName());
    
    /**
     * Test Vietnamese characters in PDF
     */
    public static void testVietnameseCharacters() {
        logger.info("Testing Vietnamese font support...");
        
        try {
            // Create mock PhieuDoiTra with Vietnamese text
            PhieuDoiTra mockPhieu = new PhieuDoiTra();
            mockPhieu.setMaPhieuDT(888);
            mockPhieu.setMaHD(59);
            mockPhieu.setLoaiPhieu("DOI");
            mockPhieu.setNgayTao(LocalDateTime.now());
            mockPhieu.setMaNV(1);
            mockPhieu.setMaKH(1);
            
            // Vietnamese text with all special characters
            String vietnameseReason = "S·∫£n ph·∫©m b·ªã l·ªói, ƒë∆∞·ªùng may kh√¥ng ƒë·ªÅu. " +
                                    "Kh√°ch h√†ng mu·ªën ƒë·ªïi size t·ª´ M sang L. " +
                                    "M√†u s·∫Øc kh√¥ng ph√π h·ª£p v·ªõi d√°ng ng∆∞·ªùi. " +
                                    "Ch·∫•t li·ªáu v·∫£i kh√¥ng nh∆∞ m√¥ t·∫£. " +
                                    "√Åo qu·∫ßn b·ªã nhƒÉn, kh√¥ng ƒë·∫πp nh∆∞ h√¨nh ·∫£nh.";
            
            String vietnameseNote = "Ghi ch√∫: Kh√°ch h√†ng l√† ng∆∞·ªùi quen, " +
                                  "ƒë√£ mua h√†ng nhi·ªÅu l·∫ßn. C·∫ßn x·ª≠ l√Ω nhanh ch√≥ng. " +
                                  "ƒê·ªïi sang s·∫£n ph·∫©m c√πng lo·∫°i, m√†u kh√°c. " +
                                  "Ho√†n ti·ªÅn n·∫øu kh√¥ng c√≥ h√†ng thay th·∫ø.";
            
            mockPhieu.setLyDo(vietnameseReason);
            mockPhieu.setTrangThai("APPROVED");
            mockPhieu.setTongGiaTriTra(new BigDecimal("350000"));
            mockPhieu.setTongGiaTriDoi(new BigDecimal("420000"));
            mockPhieu.setSoTienBoSung(new BigDecimal("70000"));
            mockPhieu.setGhiChu(vietnameseNote);
            
            // Generate PDF
            String outputPath = "test_vietnamese_font.pdf";
            PDFPhieuDoiTraGenerator.generatePhieuDoiTraPDF(mockPhieu, outputPath);
            
            logger.info("‚úÖ Vietnamese font test PDF generated: " + outputPath);
            logger.info("üìÑ Please check the PDF to verify Vietnamese characters display correctly");
            
            // Test specific Vietnamese characters
            testSpecificCharacters();
            
        } catch (Exception e) {
            logger.severe("‚ùå Error generating Vietnamese font test PDF: " + e.getMessage());
            e.printStackTrace();
        }
    }
    
    /**
     * Test specific Vietnamese characters that commonly cause issues
     */
    private static void testSpecificCharacters() {
        logger.info("Testing specific Vietnamese characters...");
        
        try {
            PhieuDoiTra testPhieu = new PhieuDoiTra();
            testPhieu.setMaPhieuDT(777);
            testPhieu.setMaHD(59);
            testPhieu.setLoaiPhieu("TRA");
            testPhieu.setNgayTao(LocalDateTime.now());
            testPhieu.setMaNV(1);
            testPhieu.setMaKH(1);
            
            // Test all Vietnamese special characters
            String specialChars = "Test c√°c k√Ω t·ª± ƒë·∫∑c bi·ªát ti·∫øng Vi·ªát:\n" +
                                "- ƒÇ ƒÉ: TƒÉng, bƒÉng, m·∫∑t, l·∫Øc\n" +
                                "- √Ç √¢: C·∫ßu, t√¢m, l√¢u, m·∫ßu\n" +
                                "- √ä √™: K√™, m√™, r·ªÉ, l·ªÖ\n" +
                                "- √î √¥: C√¥, t√¥, l√¥, m√¥\n" +
                                "- ∆† ∆°: C∆°, t∆°, l∆°, m∆°\n" +
                                "- ∆Ø ∆∞: C∆∞, t∆∞, l∆∞, m∆∞\n" +
                                "- ƒê ƒë: ƒê√°, ƒëi, ƒë√≥, ƒë·ªß\n" +
                                "- D·∫•u s·∫Øc: √° √© √≠ √≥ √∫ √Ω\n" +
                                "- D·∫•u huy·ªÅn: √† √® √¨ √≤ √π ·ª≥\n" +
                                "- D·∫•u h·ªèi: ·∫£ ·∫ª ·ªâ ·ªè ·ªß ·ª∑\n" +
                                "- D·∫•u ng√£: √£ ·∫Ω ƒ© √µ ≈© ·ªπ\n" +
                                "- D·∫•u n·∫∑ng: ·∫° ·∫π ·ªã ·ªç ·ª• ·ªµ";
            
            testPhieu.setLyDo(specialChars);
            testPhieu.setTrangThai("COMPLETED");
            testPhieu.setTongGiaTriTra(new BigDecimal("500000"));
            testPhieu.setGhiChu("Ki·ªÉm tra hi·ªÉn th·ªã k√Ω t·ª± ƒë·∫∑c bi·ªát");
            
            String outputPath = "test_vietnamese_special_chars.pdf";
            PDFPhieuDoiTraGenerator.generatePhieuDoiTraPDF(testPhieu, outputPath);
            
            logger.info("‚úÖ Special characters test PDF generated: " + outputPath);
            
        } catch (Exception e) {
            logger.severe("‚ùå Error generating special characters test: " + e.getMessage());
            e.printStackTrace();
        }
    }
    
    /**
     * Test with real database data containing Vietnamese
     */
    public static void testWithRealData() {
        logger.info("Testing with real database data...");
        
        try {
            dao.impl.PhieuDoiTraDAO dao = new dao.impl.PhieuDoiTraDAO();
            java.util.List<model.PhieuDoiTra> phieuList = dao.findAll();
            
            if (phieuList.isEmpty()) {
                logger.warning("No PhieuDoiTra found in database");
                return;
            }
            
            // Find a phieu with Vietnamese text
            model.PhieuDoiTra vietnamesePhieu = null;
            for (model.PhieuDoiTra phieu : phieuList) {
                if (phieu.getLyDo() != null && containsVietnamese(phieu.getLyDo())) {
                    vietnamesePhieu = phieu;
                    break;
                }
            }
            
            if (vietnamesePhieu != null) {
                String outputPath = "test_real_vietnamese_data_" + vietnamesePhieu.getMaPhieuDT() + ".pdf";
                PDFPhieuDoiTraGenerator.generatePhieuDoiTraPDF(vietnamesePhieu, outputPath);
                
                logger.info("‚úÖ Real Vietnamese data test PDF generated: " + outputPath);
                logger.info("üìù Phieu ID: " + vietnamesePhieu.getMaPhieuDT());
                logger.info("üìù Reason: " + vietnamesePhieu.getLyDo());
            } else {
                logger.info("‚ÑπÔ∏è No phieu with Vietnamese text found in database");
            }
            
        } catch (Exception e) {
            logger.severe("‚ùå Error testing with real data: " + e.getMessage());
            e.printStackTrace();
        }
    }
    
    /**
     * Check if text contains Vietnamese characters
     */
    private static boolean containsVietnamese(String text) {
        if (text == null) return false;
        
        // Check for Vietnamese special characters
        String vietnameseChars = "√†√°·∫°·∫£√£√¢·∫ß·∫•·∫≠·∫©·∫´ƒÉ·∫±·∫Ø·∫∑·∫≥·∫µ√®√©·∫π·∫ª·∫Ω√™·ªÅ·∫ø·ªá·ªÉ·ªÖ√¨√≠·ªã·ªâƒ©√≤√≥·ªç·ªè√µ√¥·ªì·ªë·ªô·ªï·ªó∆°·ªù·ªõ·ª£·ªü·ª°√π√∫·ª•·ªß≈©∆∞·ª´·ª©·ª±·ª≠·ªØ·ª≥√Ω·ªµ·ª∑·ªπƒë" +
                                "√Ä√Å·∫†·∫¢√É√Ç·∫¶·∫§·∫¨·∫®·∫™ƒÇ·∫∞·∫Æ·∫∂·∫≤·∫¥√à√â·∫∏·∫∫·∫º√ä·ªÄ·∫æ·ªÜ·ªÇ·ªÑ√å√ç·ªä·ªàƒ®√í√ì·ªå·ªé√ï√î·ªí·ªê·ªò·ªî·ªñ∆†·ªú·ªö·ª¢·ªû·ª†√ô√ö·ª§·ª¶≈®∆Ø·ª™·ª®·ª∞·ª¨·ªÆ·ª≤√ù·ª¥·ª∂·ª∏ƒê";
        
        for (char c : text.toCharArray()) {
            if (vietnameseChars.indexOf(c) >= 0) {
                return true;
            }
        }
        return false;
    }
    
    /**
     * Main method for testing
     */
    public static void main(String[] args) {
        logger.info("Starting Vietnamese font test suite...");
        
        // Test 1: Mock data with Vietnamese
        testVietnameseCharacters();
        
        // Test 2: Real database data
        testWithRealData();
        
        logger.info("Vietnamese font test suite completed.");
        logger.info("üìã Check the generated PDF files to verify Vietnamese character display:");
        logger.info("   - test_vietnamese_font.pdf");
        logger.info("   - test_vietnamese_special_chars.pdf");
        logger.info("   - test_real_vietnamese_data_*.pdf (if available)");
    }
}
